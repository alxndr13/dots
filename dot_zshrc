# zsh compsys
autoload -Uz compinit
if [ $(date +'%j') != $(/usr/bin/stat -f '%Sm' -t '%j' ${ZDOTDIR:-$HOME}/.zcompdump) ]; then
  compinit
else
  compinit -C
fi

source $(brew --prefix)/opt/antidote/share/antidote/antidote.zsh

antidote load

export PATH=$PATH:/Users/ahuck/go/bin
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
export PATH="$HOME/.local/bin:$PATH"

# History Settings
HISTFILE=$HOME/.zsh_history
HISTSIZE=500000
SAVEHIST=500000
setopt appendhistory
setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY
setopt nohistverify

ZSH_FZF_HISTORY_SEARCH_DATES_IN_SEARCH=0

unsetopt flow_control
setopt autocd
# autocomplete only dirs on cd
zstyle ':completion:*:cd:*' file-patterns '*(/):directories'
# allow autocomplete on 'cd ..<TAB>'
zstyle ':completion:*' special-dirs true

export EDITOR="nvim"
alias ll='eza --icons -l --time-style relative --git -snew '
alias cdmktemp="cd $(mktemp -d)"
alias k='kubectl'
# source <(kubectl completion zsh)
# compdef kubecolor=kubectl
alias calsync="~/calendarsync.sh"
alias standup='git-standup -d 1 -s'
alias kx='kubectx'
alias kns='kubens'
alias cat='bat -pp'
alias make="gmake"
alias pat='bat --paging=always'
alias note='vim ~/notes.txt'
alias td="todo.sh"
alias pass='gopass'
alias vi='nvim'
alias dp='describepod'
alias shfmt="shfmt --indent 2 --case-indent"
alias fp='findpod'
alias tp='tailpod'
alias vim='nvim'
alias sudo='sudo '
alias opsshuffle='echo "Alex\nDonato\nHekmat\nJoe\nLukas\nSimon" | shuf -n 2'
alias watch='watch '
alias gitdeleteorphan="git fetch -p ; git branch -r | awk '{print \$1}' | grep -E -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print \$1}' | xargs git branch -D"
alias gittrackallremote="for branch in \$(git branch -r | awk \"{print \$1}\" | grep origin | grep -Ev \"(HEAD|main)\" | cut -d\/ -f2-); do git branch --track \$branch origin/\$branch || true ; done"
alias cze='chezmoi edit --apply'
alias tf='terraform'
alias tfi='terraform init'
alias tfs='terraform state'
alias tfsl='terraform state list'
alias tfss='terraform state show'
alias tfmt='terraform fmt'
alias tfp='terraform plan'
alias tfa='terraform apply'
alias tfaa='terraform apply --auto-approve'
alias lz='lazygit'
alias n='nnn'
alias st='stern'
alias kt='kitty --detach'
alias k9s='k9s --logoless -A'
alias kill9='kill -9'
alias cz='chezmoi'
alias vimdiff='nvim -d'
alias d="cd /Users/ahuck/Documents/inovex/nvim_zettelkasten/ && nvim /Users/ahuck/Documents/inovex/nvim_zettelkasten/$(date "+%Y-%m-%d").md; cd -"
alias m="cd /Users/ahuck/Documents/inovex/nvim_zettelkasten/ && nvim /Users/ahuck/Documents/inovex/nvim_zettelkasten/$(date -v +1d "+%Y-%m-%d").md; cd -"
alias dive="dive"
alias valevocab="chezmoi edit --apply .config/vale/styles/Vocab/MyVocab/accept.txt"
alias cronlogs='journalctl -b 0 -f -n 10000 | rg -i cron'

alias jsrfr="jira sprint list --current --order-by status -q 'status=\"Ready to Review\"' --columns 'KEY,SUMMARY,STATUS,ASSIGNEE,UPDATED'"
alias jsl="jira sprint list --order-by status --current -q 'type != Sub-task' --columns 'KEY,SUMMARY,STATUS,ASSIGNEE,UPDATED'"
alias jic="jira issue create -t Story --web"
alias jicb="jira issue create -t Bug --web"
alias t="task"

until_success() {
  until zsh -c "$@"; do sleep 0.5; done
}

until_forever() {
  until false; do zsh -c "$@"; sleep 0.5; done
}

# Pet - https://github.com/knqyf263/pet
function prev() {
  PREV=$(fc -lrn | head -n 1)
  sh -c "pet new `printf %q "$PREV"`"
}

alias pc='pet clip'
alias pe='pet exec'

# Markhub AKS Proxy

alias markhub-aks-proxy="source /Users/ahuck/Code/secret_stuff/cs/infrastructure/deploy/*/scripts/aks-ssh-port-forwarding.sh"
func markhub-ssh-config() {
  target=$(basename /Users/ahuck/Code/secret_stuff/cs/infrastructure/deploy/*)
  /Users/ahuck/Code/secret_stuff/cs/infrastructure/deploy/$target/scripts/ssh_config.sh > ~/.ssh/markhub_$target
}

# secret_stuff check elevation
func checkinfrapim () {
  az ad user get-member-groups --id admhucka@de.secret_stuff.com | jq '.[] | select(.displayName == "az-rbac-pag-cloudinfra")' && if [[ $? -eq 0 ]]; then echo "user is part of az-rbac-pag-cloudinfra"; fi
}

alias tflint_odm='tflint --enable-rule terraform_deprecated_index --enable-rule terraform_unused_declarations --enable-rule terraform_comment_syntax --enable-rule terraform_documented_outputs --enable-rule terraform_documented_variables --enable-rule terraform_typed_variables --enable-rule terraform_naming_convention --disable-rule terraform_module_pinned_source --disable-rule aws_acm_certificate_invalid_private_key --enable-rule terraform_required_version --enable-rule terraform_required_providers --enable-rule terraform_standard_module_structure --enable-rule terraform_workspace_remote'


# [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
__git_files () {
    _wanted files expl 'local files' _files
}

function kdebug() {
  kubectl run test-pod-hucka-$RANDOM -n monitoring -ti --image docker.mirror.secret_stuff.com/alpine:latest --restart=Never --rm -- sh
}

function countnodes() {
  kubectl get nodes | tail -n +2 | wc -l
}

function =
{
  echo "$@" | bc -l
}

# needed as we do not have omz core anymore, taken and modified from:
# https://github.com/ohmyzsh/ohmyzsh/blob/6dfc9b9/lib/git.zsh
function git_current_branch() {
  local ref
  ref=$(git symbolic-ref --quiet HEAD 2> /dev/null)
  local ret=$?
  if [[ $ret != 0 ]]; then
    [[ $ret == 128 ]] && return  # no git repo.
    ref=$(git rev-parse --short HEAD 2> /dev/null) || return
  fi
  echo ${ref#refs/heads/}
}

# Load Bash Completion files in zsh
# autoload -U +X bashcompinit && bashcompinit

# Shift Tab to accept autosuggestion
bindkey '^[[Z' autosuggest-accept
# CTRL+ arrow keys for word
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word
bindkey "^[." insert-last-word
bindkey '^Q' push-line

export WORDCHARS=''

_evalcache starship init zsh

## direnv
_evalcache direnv hook zsh
## zoxide
_evalcache zoxide init zsh


# export MCFLY_FUZZY=2
# export MCFLY_RESULTS=20
# export MCFLY_INTERFACE_VIEW=BOTTOM
# export MCFLY_PROMPT="‚ùØ"
# export MCFLY_KEY_SCHEME=vim
# _evalcache mcfly init zsh


